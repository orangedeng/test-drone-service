# FROM golang:1.13.10-alpine3.11
FROM orstar/dapper-base:v0.0.3
ARG DAPPER_HOST_ARCH
ENV ARCH $DAPPER_HOST_ARCH

# RUN apk -U add bash git gcc musl-dev docker vim less file curl wget ca-certificates xz zip
# RUN go get -d golang.org/x/lint/golint && \
#     git -C /go/src/golang.org/x/lint/golint checkout -b current 06c8688daad7faa9da5a0c2f163a3d14aac986ca && \
#     go install golang.org/x/lint/golint && \
#     rm -rf /go/src /go/pkg
# RUN mkdir -p /go/src/golang.org/x && \
#     cd /go/src/golang.org/x && git clone https://github.com/golang/tools && \
#     git -C /go/src/golang.org/x/tools checkout -b current aa82965741a9fecd12b026fbb3d3c6ed3231b8f8 && \
#     go install golang.org/x/tools/cmd/goimports
# RUN rm -rf /go/src /go/pkg
# RUN if [ "${ARCH}" == "amd64" ]; then \
#         curl -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.15.0; \
#     fi

ENV DAPPER_ENV REGISTRY REGISTRY_USER REGISTRY_PASSWORD REPO TAG DRONE_TAG SKIP_GO_MOD REPO_RENAME UI_DOWNLOAD_BASE_URL SKIP_GO_PACKAGE_RUNNER CLCOS_BASE_IMAGE TINI_URL TINI_VERSION
ENV DAPPER_SOURCE /go/src/github.com/cnrancher/clcos-framework
ENV DAPPER_OUTPUT ./bin ./dist
ENV DAPPER_DOCKER_SOCKET true
ENV HOME ${DAPPER_SOURCE}
WORKDIR ${DAPPER_SOURCE}
ENV GOPROXY="https://goproxy.cn,direct"

CMD [ "echo", "hello world" ]